version: "3"

services:
    postgresql:
        image: postgres:14-bookworm@sha256:3be9a3ad9e8308654b9d26ed2dd0be1767cff86c2d8d31d6125f188735e47d7f
        environment:
            POSTGRES_DB: hashbash
            POSTGRES_PASSWORD: postgres

    rabbitmq:
        image: rabbitmq:3.9-management@sha256:74c6f00ed725ca77d8c0d416e01e99cfbaba17aa77bc2d2846d9c0066ab5be61

    migrate:
        image: jnorwood/hashbash-migrate:2023.10.0
        depends_on:
            - postgresql
        entrypoint:
            - bash
            - -c
            - >
                /opt/scripts/wait-for-it postgresql:5432 -t 300
                && /migrate \
                  -database postgresql://postgres:postgres@postgresql/hashbash?sslmode=disable \
                  -path . \
                  up
        volumes:
            - type: bind
              source: ../scripts
              target: /opt/scripts
              read_only: true

    hashbash-engine:
        image: jnorwood/hashbash-consumers-go:2023.10.0
        depends_on:
            - postgresql
            - rabbitmq
        entrypoint:
            - bash
            - -c
            - >
                /opt/scripts/wait-for-it rabbitmq:5672 -t 300
                && /opt/scripts/wait-for-it postgresql:5432 -t 300
                && /hashbash-engine
        environment:
            HASHBASH_DATABASE_ENGINE: postgresql
            HASHBASH_DATABASE_HOST: postgresql
            HASHBASH_DATABASE_SSL_MODE: disable
            HASHBASH_DATABASE_USERNAME: postgres
            HASHBASH_DATABASE_PASSWORD: postgres
            HASHBASH_RABBITMQ_HOST: rabbitmq
            HASHBASH_MANAGEMENT_ADDR: 0.0.0.0:8082
        ports:
            - published: 8082
              target: 8082
        volumes:
            - type: bind
              source: ../scripts
              target: /opt/scripts
              read_only: true

    hashbash-webapp:
        image: jnorwood/hashbash-webapp-go:2023.10.0
        depends_on:
            - postgresql
            - rabbitmq
        entrypoint:
            - bash
            - -c
            - >
                /opt/scripts/wait-for-it rabbitmq:5672 -t 300
                && /opt/scripts/wait-for-it postgresql:5432 -t 300
                && /hashbash-webapp
        environment:
            HASHBASH_DATABASE_ENGINE: postgresql
            HASHBASH_DATABASE_HOST: postgresql
            HASHBASH_DATABASE_SSL_MODE: disable
            HASHBASH_DATABASE_USERNAME: postgres
            HASHBASH_DATABASE_PASSWORD: postgres
            HASHBASH_RABBITMQ_HOST: rabbitmq
            HASHBASH_HTTP_SOCK: /run/hashbash/webapp.sock
            HASHBASH_MANAGEMENT_ADDR: 0.0.0.0:8081
        ports:
            - published: 8081
              target: 8081
        volumes:
            - type: bind
              source: ../scripts
              target: /opt/scripts
              read_only: true
            - type: volume
              source: hashbash-webapp-sockets
              target: /run/hashbash

    webpack_builder:
        image: jnorwood/hashbash-webpack_builder
        build:
            context: ..
            dockerfile: docker/Dockerfile-webpack_builder
        entrypoint:
            - node_modules/webpack/bin/webpack.js
            - --watch
            - --devtool
            - source-map
        volumes:
            - type: bind
              source: ../src
              target: /etc/hashbash/src
              read_only: true
            - type: volume
              source: frontend-public-volume
              target: /etc/hashbash/dist

    nginx:
        image: jnorwood/hashbash-nginx
        build:
            context: ..
            dockerfile: docker/Dockerfile-nginx
        volumes:
            - type: bind
              source: ../nginx.conf
              target: /etc/hashbash/nginx.conf
              read_only: true
            - type: volume
              source: frontend-public-volume
              target: /etc/hashbash/dist
              read_only: true
            - type: volume
              source: hashbash-webapp-sockets
              target: /run/hashbash
            - type: volume
              source: hashbash-nginx-runtime
              target: /run/hashbash-nginx
            - type: volume
              source: hashbash-journal-logs
              target: /run/systemd/journal
            - type: volume
              source: hashbash-nginx-exporter-logs
              target: /run/hashbash-nginx-exporter

    journald:
        image: jnorwood/hashbash-syslog
        build:
            dockerfile: Dockerfile-syslog
        environment:
            SOCKET_PATH: /run/systemd/journal/dev-log
        volumes:
            - type: volume
              source: hashbash-journal-logs
              target: /run/systemd/journal

    nginx-log-exporter:
        image: jnorwood/hashbash-syslog
        build:
            dockerfile: Dockerfile-syslog
        environment:
            SOCKET_PATH: /run/hashbash-nginx-exporter/syslog.sock
        volumes:
            - type: volume
              source: hashbash-nginx-exporter-logs
              target: /run/hashbash-nginx-exporter
    socat:
        image: jnorwood/hashbash-socat
        build:
            dockerfile: Dockerfile-socat
        ports:
            - published: 23280
              target: 23080
        volumes:
            - type: volume
              source: hashbash-nginx-runtime
              target: /run/hashbash-nginx

volumes:
    hashbash-journal-logs:
    hashbash-nginx-exporter-logs:
    hashbash-nginx-runtime:
    frontend-public-volume:
    hashbash-webapp-sockets:
